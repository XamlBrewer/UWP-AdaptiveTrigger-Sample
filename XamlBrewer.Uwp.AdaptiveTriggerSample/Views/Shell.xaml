<Page x:Class="XamlBrewer.Uwp.AdaptiveTriggerSample.Views.Shell"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:XamlBrewer.Uwp.AdaptiveTriggerSample.ViewModels"
      mc:Ignorable="d">

    <Page.Resources>
        <SolidColorBrush x:Key="JustOneShadeOfGray"
                         Color="LightSlateGray" />
    </Page.Resources>

    <Page.DataContext>
        <vm:ShellViewModel />
    </Page.DataContext>

    <Grid>
        <!-- SplitView -->
        <SplitView x:Name="MySplitView"
                   IsPaneOpen="False"
                   CompactPaneLength="40"
                   OpenPaneLength="150"
                   PaneBackground="{StaticResource JustOneShadeOfGray}"
                   DisplayMode="Overlay">
            <SplitView.Pane>
                <Grid x:Name="SplitViewPane"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      ManipulationMode="TranslateX"
                      ManipulationCompleted="SplitViewPane_ManipulationCompleted"
                      Background="{StaticResource JustOneShadeOfGray}">
                    <ListView ItemsSource="{Binding Menu}"
                              SelectionChanged="Menu_SelectionChanged"
                              Margin="0 48 0 0"
                              VerticalAlignment="Top">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon x:Name="Glyph"
                                              Glyph="{Binding Glyph}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Foreground="White"
                                              ToolTipService.ToolTip="{Binding Text}" />
                                    <TextBlock Text="{Binding Text}"
                                               Margin="8 0 0 0"
                                               Foreground="White" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <!-- Logo -->
                    <Viewbox x:Name="Logo"
                             StretchDirection="DownOnly"
                             Margin="4"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Bottom"
                             Width="142">
                        <Canvas Height="80"
                                Width="200"
                                Background="Transparent">
                            <Canvas>
                                <Viewbox Height="70"
                                         Canvas.Left="5"
                                         Canvas.Top="5">
                                    <Canvas Width="124"
                                            Height="240"
                                            Background="Transparent">
                                        <Path Width="116"
                                              Height="236"
                                              Margin="4 0 4 4"
                                              Stretch="Fill"
                                              Fill="White"
                                              Data="F1 M 4869.77,-3633.83C 4870.14,-3633.18 4866.87,-3606.81 4867.34,-3603.82C 4867.81,-3600.82 4871.83,-3590.35 4871.83,-3584.36C 4871.83,-3574.77 4868.13,-3569.7 4865.19,-3561.36C 4863.32,-3556.07 4863.13,-3540.54 4862.94,-3538.77C 4862.76,-3536.99 4853.72,-3414.8 4852.97,-3411.99C 4852.22,-3409.19 4849.1,-3401.58 4843.86,-3401.33C 4838.63,-3401.08 4802.53,-3401.33 4809.36,-3401.33C 4816.18,-3401.33 4779.21,-3401.08 4773.98,-3401.33C 4768.74,-3401.58 4766.14,-3408.25 4765.74,-3411.99C 4765.44,-3414.88 4755.96,-3536.99 4755.77,-3538.77C 4755.58,-3540.54 4755.39,-3556.07 4753.52,-3561.36C 4750.58,-3569.7 4746.89,-3574.77 4746.89,-3584.36C 4746.89,-3590.35 4750.91,-3600.82 4751.37,-3603.82C 4751.84,-3606.81 4748.57,-3633.18 4748.94,-3633.83C 4749.32,-3634.49 4750.81,-3634.49 4750.81,-3634.49" />
                                    </Canvas>
                                </Viewbox>
                            </Canvas>
                            <Grid Width="200"
                                  Height="80">
                                <TextBlock Foreground="OrangeRed"
                                           FontSize="24"
                                           FontWeight="SemiBold"
                                           VerticalAlignment="Bottom"
                                           Padding="0"
                                           Margin="48 0 8 12">
                                    <Run Text="XAML" />
                                    <Run Text="Brewer"
                                         Foreground="White"
                                         FontWeight="Light" />
                                </TextBlock>
                            </Grid>
                        </Canvas>
                    </Viewbox>
                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                <Grid>

                    <!-- Navigation Frame -->
                    <Frame x:Name="SplitViewFrame">
                        <Frame.ContentTransitions>
                            <TransitionCollection>
                                <NavigationThemeTransition>
                                    <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                        <EntranceNavigationTransitionInfo />
                                    </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                </NavigationThemeTransition>
                            </TransitionCollection>
                        </Frame.ContentTransitions>
                    </Frame>

                    <!-- SplitViewOpener -->
                    <Grid ManipulationMode="TranslateX"
                          ManipulationCompleted="SplitViewOpener_ManipulationCompleted"
                          Width="150"
                          Background="Transparent"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Stretch">
                    </Grid>

                    <!-- Page Width Indicator -->
                    <TextBlock x:Name="WidthIndicator"
                               Foreground="{StaticResource JustOneShadeOfGray}"
                               VerticalAlignment="Bottom"
                               HorizontalAlignment="Right"
                               Margin="8" />
                </Grid>
            </SplitView.Content>
        </SplitView>

        <!-- Hamburger Button -->
        <Button x:Name="HamburgerButton"
                FontFamily="Segoe MDL2 Assets"
                Content="&#xE700;"
                Width="40"
                Height="40"
                Background="Transparent"
                Foreground="OrangeRed"
                VerticalAlignment="Top"
                BorderThickness="0"
                Click="HamburgerButton_Click" />
        
        <!-- Responsive Visual States -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Widest possible layout moves some elements around to optimize for more available width 
                        and keeps SplitView pane always showing inline -->
                        <Setter Target="MySplitView.DisplayMode"
                                Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen"
                                Value="True" />
                        <!--<Setter Target="BackgroundCombo.(RelativePanel.RightOf)"
                                Value="BackgroundImage" />
                        <Setter Target="BackgroundCombo.(RelativePanel.AlignTopWith)"
                                Value="BackgroundImage" />
                        <Setter Target="BackgroundCombo.(RelativePanel.AlignLeftWith)"
                                Value="FitCombo" />
                        <Setter Target="PictureLabel.(RelativePanel.Below)"
                                Value="BackgroundImage" />
                        <Setter Target="FitCombo.(RelativePanel.RightOf)"
                                Value="PicturesPanel" />
                        <Setter Target="FitCombo.(RelativePanel.AlignTopWith)"
                                Value="PictureLabel" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=548 and <720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="548" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For intermediate window widths as well as most phones on landscape orientation, 
                        this state keeps primary layout narrow while showing the splitview pane to take advantage of more available width than narrow layout -->
                        <Setter Target="MySplitView.DisplayMode"
                                Value="CompactInline" />
                        <Setter Target="MySplitView.IsPaneOpen"
                                Value="False" />
                        <!--<Setter Target="BackgroundCombo.(RelativePanel.Below)"
                                Value="BackgroundImage" />
                        <Setter Target="PictureLabel.(RelativePanel.Below)"
                                Value="BackgroundCombo" />
                        <Setter Target="FitCombo.(RelativePanel.Below)"
                                Value="BrowseButton" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For the most narrow windows and phones in portrait orientation, this state collapses the SplitView pane into overlay mode
                        and adds dynamic RelativePanel constraints that puts all elements stacked below each other -->
                        <Setter Target="MySplitView.DisplayMode"
                                Value="Overlay" />
                        <Setter Target="MySplitView.IsPaneOpen"
                                Value="False" />
                        <!--<Setter Target="BackgroundCombo.(RelativePanel.Below)"
                                Value="BackgroundImage" />
                        <Setter Target="PictureLabel.(RelativePanel.Below)"
                                Value="BackgroundCombo" />
                        <Setter Target="FitCombo.(RelativePanel.Below)"
                                Value="BrowseButton" />-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
